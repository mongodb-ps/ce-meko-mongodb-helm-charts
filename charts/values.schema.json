{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "clusterName",
    "mongoDBVersion"
  ],
  "properties": {
    "clusterName": {
      "type": "string"
    },
    "mongoDBVersion": {
      "type": "string",
      "pattern": "(^(?:[0-9]\\.){2}[0-9]{1,2}-ent$)"
    },
    "sharding": {
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "if": {
        "properties": {
          "enabled": {
            "const": true
          }
        }
      },
      "then": {
        "required": [
          "shardSrv",
          "configSrv",
          "mongos"
        ],
        "properties": {
          "shardSrv": {
            "type": "object",
            "required": [
              "shards",
              "memberPerShard",
              "storage"
            ],
            "properties": {
              "storage": {
                "type": "object",
                "required": [
                  "persistenceType"
                ],
                "properties": {
                  "persistenceType": {
                    "type": "string",
                    "pattern": "(^single|multiple$)"
                  },
                  "if": {
                    "properties": {
                      "persistenceType": {
                        "const": "single"
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "single"
                    ],
                    "single": {
                      "type": "object",
                      "required": [
                        "size",
                        "storageClass"
                      ],
                      "properties": {
                        "size": {
                          "type": "string",
                          "pattern": "(^[1-9]\\d*(?:\\.\\d+)?(?:E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki)$)"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "replicaSet": {
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "if": {
        "properties": {
          "enabled": {
            "const": true
          }
        }
      },
      "then": {
        "required": [
          "replicas",
          "storage"
        ],
        "properties": {
          "replicas": {
            "type": "integer"
          },
          "storage": {
            "type": "object",
            "required": [
              "persistenceType"
            ],
            "properties": {
              "nfs": {
                "type": "boolean"
              },
              "persistenceType": {
                "type": "string",
                "pattern": "(^single|multiple$)"
              },
              "if": {
                "properties": {
                  "persistenceType": {
                    "const": "single"
                  }
                }
              },
              "then": {
                "required": [
                  "single"
                ],
                "single": {
                  "$ref": "#/$defs/storageObject"
                }
              },
              "else": {
                "type": "object",
                "required": [
                  "multiple"
                ],
                "properties": {
                  "multiple": {
                    "type": "object",
                    "required": [
                      "data",
                      "journal",
                      "logs"
                    ],
                    "data": {
                      "$ref": "#/$defs/storageObject"
                    },
                    "journal": {
                      "$ref": "#/$defs/storageObject"
                    },
                    "logs": {
                      "$ref": "#/$defs/storageObject"
                    }
                  }
                }
              }
            }
          }
        }
      }    
    },
    "agent": {
      "type": "object"
    }
  },
  "$defs": {
    "storageObject": {
      "type": "object",
      "required": [
        "size"
      ],
      "properties": {
        "size": {
          "type": "string",
          "pattern": "(^[1-9]\\d*(?:\\.\\d+)?(?:E|P|T|G|M|K|Ei|Pi|Ti|Gi|Mi|Ki)$)"
        },
        "storageClass": {
          "description": "storageClass to use, if absent the default storageClass is used, if set",
          "type": "string"
        }
      }
    }
  }
}